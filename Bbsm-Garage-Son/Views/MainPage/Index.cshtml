@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    // Layout = null;
    int index = 0;
}

@using Bbsm_Garage_Son.Models;
@model KartEkleModel;

<head>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
    <title>BBSM Garage - Kartlar</title>
    <link rel="icon" href="/bbsm.ico" /> 
</head>

      <div class="flex-1 flex flex-col">

        <div class="p-6 pt-8 lg:ml-64 ">
          <div class="p-6 mt-20 bg-my-beyaz rounded-3xl">
            <div class="flex items-center pb-4 justify-between">
              <div class="flex items-center">
                <div class="pr-4 items-center ">
                  <div class="flex flex-column sm:flex-row flex-wrap items-center justify-between ">
                    <p class="font-bold text-xl text-my-siyah">Kartlarım</p>
                  </div>
                </div>
              </div>
              <div class="flex items-center">
                <div class="items-center bg-red-600 p-2 pl-4 pr-4 rounded-full ml-4">
                  <button id="myButton" onclick="submitForm()" class="font-semibold text-my-beyaz text-md">Seçilenleri Sil</button>
                </div>
                <div class="items-center bg-green-500 p-2 pl-4 pr-4 rounded-full ml-4">
                  <button href="" class="font-semibold text-my-beyaz text-md">Seçilenleri İndir</button>
                </div>

                <div class="items-center bg-my-mavi p-2 pl-4 pr-4 rounded-full ml-4">
                <div class="">
                  <!-- Trigger Button -->
                  <button id="openContactForm" class=" text-my-beyaz text-md font-semibold rounded"> Yeni Kart Ekle</button>
                  <!-- Modal -->
                  <div id="contactFormModal" class="fixed bg-gray-500 bg-opacity-50 backdrop-blur-sm backdrop-brightness-30 rounded-3xl z-10 inset-0 overflow-y-auto hidden">
                    <div class="flex items-center justify-center min-h-screen">
                      <div class="bg-white w-1/2 pl-6 pr-6 p-6 rounded-3xl shadow-md">
                        <div class="flex justify-end">  
                          <!-- Close Button -->
                          <button id="closeContactForm" class="text-gray-700 hover:text-red-500">
                            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                          </button>
                        </div>
                        <h2 class="text-2xl font-bold mb-4">Kart Ekle</h2>

                          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                            <input    type="text"   name="adSoyad"     id="AdSoyad" placeholder="Ad Soyad" class="bg-my-beyaz border p-2 rounded-md"  />
                            <input    type="number" name="TelNo"       id="TelNo" placeholder="telefon no" pattern="\d{10}"  class="bg-my-beyaz border p-2 rounded-md"  />
                            <input    type="text"   name="MarkaModel"  id="MarkaModel" placeholder="Marka Model"  class="bg-my-beyaz border p-2 rounded-md" />
                            <input    type="date"   name="GirisTarihi" id="GirisTarihi" placeholder="Giriş Tarihi" class="bg-my-beyaz border p-2 rounded-md" />
                            <input    type="text"   name="Plaka"       id="Plaka" placeholder="Plaka"   class="bg-my-beyaz border p-2 rounded-md" />
                            <input    type="number" name="Km"          id="Km" placeholder="Km"  class="bg-my-beyaz border p-2 rounded-md" />
                            <input    type="text"   name="Sasi"        id="Sasi" placeholder="Şasi No"  class="bg-my-beyaz border p-2 rounded-md col-span-2" />
                            <input    type="number" name="ModelYili"   id="ModelYili" placeholder="Model Yılı"  class="bg-my-beyaz border p-2 rounded-md" />
                            <input    type="text"   name="Renk"        id="Renk" placeholder="Rengi"  class="bg-my-beyaz border p-2 rounded-md" />
                            <textarea type="text"   name="adres"       id="adres" placeholder="Adres" class="bg-my-beyaz border p-2 rounded-md" rows="3"></textarea>
                            <textarea type="text"   name="notlar"      id="notlar" placeholder="Notlar" class="bg-my-beyaz border p-2 rounded-md" rows="3"></textarea>
                          </div>

                          <div class="flex justify-between mt-8">
                            <button type="button" onclick="KartEkleAsama1Close()" class="bg-my-açıkgri text-white font-semibold rounded-full p-2 pl-8 pr-8 ">İptal</button>
                            <button type="button" onclick="KartEkleAsama1TableTemizle()" class="bg-red-500 text-white font-semibold rounded-full p-2 pl-8 pr-8 ">   Formu Temizle</button>
                            <button type="button" id="openContactForm2" class="bg-my-mavi text-white font-semibold rounded-full p-2 pl-8 pr-8 ">  İleri</button>
                          </div>

                        </div>
                      </div>
                    </div>
                  </div>            
                </div>                
                <div class="pr-4 items-center pl-4">
                  <div class="flex flex-column sm:flex-row flex-wrap space-y-4 sm:space-y-0 items-center justify-between">
                    <label htmlFor="table-search" class="sr-only">Search</label>
                    <div class="relative">
                      <div class="absolute inset-y-0 left-0 rtl:inset-r-0 rtl:right-0 flex items-center ps-3 pointer-events-none">
                        <svg class="w-5 h-5 text-gray-500 " aria-hidden="true" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fillRule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clipRule="evenodd"></path></svg>
                      </div>
                      <input type="text" id="tableSearch"
                        class="block p-2 ps-10 text-md text-gray-900 border border-gray-300 rounded-full w-80 bg-gray-50 focus:ring-blue-500 focus:border-blue-500"
                        placeholder="Kartları ara..."/>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          <div class="overflow-auto h-140">
          <table class="w-full text-sm text-left text-gray-500 font-medium">
                <thead class="text-xs text-gray-600 uppercase bg-my-edbeyaz">
                    <tr>
                        <th scope="col" class="p-4"></th>

                        <th scope="col" class="px-6 py-3">
                            Ad-Soyad
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Marka-Model
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Plaka
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Km
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Şasİ No
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Giriş Tarihi
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Görüntüle
                        </th>
                        <th scope="col" class="px-6 py-3">
                            İndİr
                        </th>
                    </tr>
                </thead>
                <tbody id="dataMainList" class="bg-white divide-y divide-gray-200">
                    @using (Html.BeginForm("Sil", "MainPage", FormMethod.Post, new { id = "SilmeFonk" }))
                    {
                        index = 0;
                        @foreach (var qwe in ViewBag.Kartlar)
                    {
                        <tr>
                            <td class="w-4 p-4">
                                <div class="flex items-center">
                                    <input type="checkbox" class="checkbox w-4 h-4 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500" data-id="@qwe.Id" />
                                    <input type="hidden" name="SelectedKartIds[@index]" value="" />
                                </div>
                            </td>

                            <td class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">
                                @qwe.adSoyad
                            </td>
                            <td class="px-6 py-4">
                                @qwe.markaModel
                            </td>
                            <td class="px-6 py-4 text-green-500">
                                @qwe.plaka
                            </td>
                            <td class="px-6 py-4">
                                @qwe.km
                            </td>
                            <td class="px-6 py-4 uppercase">
                                @qwe.sasi
                            </td>
                            <td class="px-6 py-4 text-blue-500 giris-tarihi">
                                @qwe.girisTarihi
                            </td>
                            <td class="px-6 py-4">
                                  <button type="button" onclick="submitDetayForm(@qwe.Id)" class="bg-yellow-500 p-2 pl-4 pr-4 rounded-full font-medium text-my-siyah hover:underline">Detay</button>
                            </td>
                            <td class="px-6 py-4">
                                <a href="#" class="bg-green-500 p-2 pl-4 pr-4 rounded-full font-medium text-my-beyaz hover:underline">Excel</a>
                            </td>

                          </tr>
                        }
                        index++;
                    }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>            
  </div>                
  <div>
    <div id="contactFormModal2" class="hidden fixed inset-0 bg-gray-500 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center backdrop-blur-sm backdrop-brightness-30">
      <div class="bg-white rounded-3xl max-w-4xl w-full mx-4 md:mx-0">
        <div class="flex justify-between items-center p-5 border-b border-gray-200 ">
          <h3 class="text-xl font-medium text-gray-900">Kart Ekle - Aşama 2</h3>
          <button id="closeContactForm2" class="text-gray-700 hover:text-red-500">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
          </button>
        </div>
        <div class="p-8">
          <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-4">
            <input type="number" id="birimAdedi" placeholder="Birim Adedi" class="border p-2 rounded-md bg-my-beyaz"/>
            <input type="text" id="parcaAdi" placeholder="Parça Adı" class="border p-2 rounded-md bg-my-beyaz"/>
            <input type="number" id="birimFiyati" placeholder="Birim Fiyatı"  class="border p-2 rounded-md bg-my-beyaz"/>
          </div>

          <div class="flex justify-end mb-4">
            <button type="button" id="Asama2EkleButton" onclick="ekleKartEkleAsama2Listeye()" class="bg-yellow-500 text-white font-semibold text-md rounded-full p-2 pl-6 pr-6 "> Ekle </button>
          </div>
          <div class="overflow-x-auto mt-6">
            <table class="min-w-full text-sm divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left font-medium text-gray-500 uppercase tracking-wider">Birim Adedi</th>
                  <th class="px-6 py-3 text-left font-medium text-gray-600 uppercase tracking-wider">Parça Adı</th>
                  <th class="px-6 py-3 text-left font-medium text-gray-500 uppercase tracking-wider">Birim Fiyatı</th>
                  <th class="px-6 py-3 text-left font-medium text-gray-700 uppercase tracking-wider">Toplam Fiyat</th>
                  <th>
                    <button type="button" onclick="tabloSilAsama2()" class="bg-red-500 text-white font-semibold text-md rounded-full m-2 pl-4 pr-4 p-2">
                      Tümünü Sil
                    </button>
                  </th>
                  
                </tr>
              </thead>
              <tbody id="KartEkleAsama2Gövdesi" class="bg-white divide-y divide-gray-200">
                  @* js ile dolduruluyor
                   <tr >
                    <td class="px-6 py-4 whitespace-nowrap">2</td>
                    <td class="px-6 py-4 whitespace-nowrap">filtre</td>
                    <td class="px-6 py-4 whitespace-nowrap">150</td>
                    <td class="px-6 py-4 whitespace-nowrap">300</td>
                    <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                    <button type="button" class="text-red-500 hover:text-red-700">
                      <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12"></path>
                      </svg>
                    </button>
                  </td>
                  </tr> *@
              </tbody>
            </table>
          </div>
          <div class="flex justify-end mt-8 space-x-2 ">
            <button type="button" onclick="KartEkleAsama2GeriDön()" class=" bg-gray-200 text-my-siyah font-semibold text-md rounded-full p-2 pl-6 pr-6 mr-10">
              Geri Dön
            </button>
            <button type="button" class=" bg-green-500 text-white font-semibold text-md rounded-full p-2 pl-4 pr-4 mr-4">
              Excel İndir
            </button>
            <button type="button" onclick="test(true)" class="bg-my-siyah text-white font-semibold text-md rounded-full p-2 pl-4 pr-4 mr-4"> 
              Teklif Olarak Kaydet
            </button>
            <button type="button" onclick="test(false)" class="bg-my-mavi text-white font-semibold text-md rounded-full p-2 pl-8 pr-8 mr-4">
              Kaydet
            </button>
          </div>
        </div>
      </div>
    </div>



@* 
      şimdi düşünelim elimizde elimizde bir struct bir de liste var kullanmamız gereken
      bunu halletmenin yolu modeli tek bir model çağırıp bunu view model olarak işaretlemek.
      içerisinde bir liste birde sabit duracak. tüm formu tek bir butona bağlayıp içeridekileri tek tek eklemek gerek. adam submut dediğinde benim controllera tek bir değişken gitmeli
      içeriisnde 

      KartEkleAsama1
      listesi olacak
        KartEkleAsama2

  *@

<script>


var cookies = document.cookie.split(';');
for (var i = 0; i < cookies.length; i++) {
    var cookie = cookies[i].trim();
    if (cookie.startsWith("auth_token=")) {
        var authToken = cookie.substring("auth_token=".length, cookie.length);
        // authToken değişkeni artık auth_token adlı cookie'nin değerini içerir
        console.log("Auth Token: " + authToken);
        break; // Gerekirse, aramayı durdurabilirsiniz
    }
}

for (var i = 0; i < cookies.length; i++) {
    var cookie = cookies[i].trim();
    if (cookie.startsWith("id=")) {
        var user_id = cookie.substring("id=".length, cookie.length);
        // authToken değişkeni artık auth_token adlı cookie'nin değerini içerir
        console.log("User: " + user_id);
        break; // Gerekirse, aramayı durdurabilirsiniz
    }
}

function submitDetayForm(id) {
    var detayUrl = '/Detay/Index?id=' + id;

    // Tarayıcıyı belirtilen URL'ye yönlendirme yapılır
    window.location.href = detayUrl;
}
  
// global baslar
// silinecek kartların id sinin tutacağız
let silineceklerKartList  = []; // int list

let KartEkleAsama2List = []; // json kartlist
// global biter

// temp başlar
// silinecek kartların id sni tutacak temp
let KartSilId;
// eklenecek kartların bilgielrini tutan Kart ekle tempi
let kartEkle =  {};
// eklenecek kartların 2.asaması için bilgielrini tutan Kart ekle2 tempi
let kartEkleAsama2 = {};
// temp biter

// backende gönderilecek veri içerisinde Silinecek Kart List ve KartEkle ve KartEkleAsama2List
let KartEkleBackGönder = {}


document.getElementById('tableSearch').addEventListener('keyup', function(event) {
    var searchQuery = event.target.value.toLowerCase();

    var dataList = document.getElementById('dataMainList');
    var listItems = dataList.getElementsByTagName('tr');

    for (var i = 0; i < listItems.length; i++) {
        var currentListItem = listItems[i].textContent.toLowerCase();
        if (currentListItem.includes(searchQuery)) {
            listItems[i].style.display = ''; // Eşleşen öğeleri göster
        } else {
            listItems[i].style.display = 'none'; // Eşleşmeyen öğeleri gizle
        }
    }
});

    document.querySelectorAll('.checkbox').forEach(function (checkbox) {
        checkbox.addEventListener('change', function () {
            var hiddenInput = checkbox.nextElementSibling;
            if (checkbox.checked) {
                hiddenInput.value = checkbox.getAttribute('data-id');
            } else {
                hiddenInput.value = '';
            }
        });
    });

  function handleClearForm()
  {
    
  }

  function deleteCardFetch(id) {
    fetch(`http://localhost:5184/api/CardEntities/${id}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.text();
    })
    .then(data => {
        console.log('Kart başarıyla silindi:', data);
        // Kartın başarıyla silindiği bildirimi veya diğer gerekli işlemler burada yapılabilir.
    })
    .catch(error => {
        console.error('Kart silinirken bir hata oluştu:', error);
        // Hata durumunda kullanıcıya bir hata mesajı gösterilebilir veya diğer işlemler yapılabilir.
    });
}

    // JavaScript to toggle the modal
    const openContactFormButton = document.getElementById('openContactForm');
    const closeContactFormButton = document.getElementById('closeContactForm');
    const contactFormModal = document.getElementById('contactFormModal');

    const openContactFormButton2 = document.getElementById('openContactForm2');
    const closeContactFormButton2 = document.getElementById('closeContactForm2');
    const contactFormModal2 = document.getElementById('contactFormModal2');

    openContactFormButton.addEventListener('click', () => {
        contactFormModal.classList.remove('hidden');
    });

    openContactFormButton2.addEventListener('click', () => {
      toplaKartEkleVerileri();
        contactFormModal.classList.add('hidden');
        contactFormModal2.classList.remove('hidden');
      tabloyuGuncelleAsama2();
    });


    closeContactFormButton.addEventListener('click', () => {
        contactFormModal.classList.add('hidden');
    });

    closeContactFormButton2.addEventListener('click', () => {
        contactFormModal2.classList.add('hidden');
    });

function KartEkleAsama1Close(){
  contactFormModal.classList.add('hidden');
}

function KartEkleAsama1TableTemizle(){
document.getElementById('AdSoyad').value = "";
document.getElementById('TelNo').value = "";
document.getElementById('MarkaModel').value = "";
document.getElementById('GirisTarihi').value = "";
document.getElementById('Plaka').value = "";
document.getElementById('Km').value = "";
document.getElementById('Sasi').value = "";
document.getElementById('ModelYili').value = "";
document.getElementById('Renk').value = "";
document.getElementById('adres').value = "";
document.getElementById('notlar').value = "";
kartEkle = {};
UserEntityId = -1;
}



// KartEkleAsama2 için geri dön yapısı
function KartEkleAsama2GeriDön()
{
  contactFormModal2.classList.add('hidden');
  contactFormModal.classList.remove('hidden');
  document.getElementById('AdSoyad').value = kartEkle.adSoyad;
  document.getElementById('TelNo').value = kartEkle.TelNo
  document.getElementById('MarkaModel').value = kartEkle.MarkaModel;
  document.getElementById('GirisTarihi').value = kartEkle.GirisTarihi;
  document.getElementById('Plaka').value = kartEkle.Plaka;
  document.getElementById('Km').value = kartEkle.Km;
  document.getElementById('Sasi').value = kartEkle.Sasi;
  document.getElementById('ModelYili').value = kartEkle.ModelYili;
  document.getElementById('Renk').value = kartEkle.Renk;
  document.getElementById('adres').value = kartEkle.adres;
  document.getElementById('notlar').value = kartEkle.notlar;
}

function formatDate(dateStr) {
    try {
        // Eğer tarih formatı 'DD/MM/YYYY' ise, onu 'YYYY-MM-DD' formatına dönüştür
        if (/^\d{2}\/\d{2}\/\d{4}$/.test(dateStr)) {
            dateStr = convertDateFormat(dateStr);
        }

        const date = new Date(dateStr);
        if (!isNaN(date.getTime())) {
            // Tarih geçerliyse, formatla ve döndür
            return date.toLocaleDateString('tr-TR');
        } else {
            // Tarih geçersizse, uygun bir mesaj döndür
            return "Geçersiz Tarih";
        }
    } catch (error) {
        console.error("Tarih formatlama hatası: ", error);
        return "Hata";
    }
}

// Tarih formatını dönüştürme fonksiyonu
function convertDateFormat(dateStr) {
    const parts = dateStr.split('/');
    return `${parts[2]}-${parts[1]}-${parts[0]}`;
}

// Örnek kullanım
document.querySelectorAll('.giris-tarihi').forEach(function(element) {
    var rawDate = element.textContent;
    var formattedDate = formatDate(rawDate);
    element.textContent = formattedDate;
});


function test2(id)
{
    KartEkleAsama2List.forEach(function(kart) {
      if(kart)
      {
        delete kart.totalFiyat;
        console.log(kart);
        fetch('http://localhost:5184/api/CardEntities/TwoStageData/'+String(id), {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(kart)
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {  
            console.log('asama2 başarılı:', data);
        })
        .catch(error => {
            console.error('asam2 hatası:', error);
            
        }); 

      }
    });

    window.location.href = "/MainPage/Index";
}


async function test(teklifBool)
{
  kartEkle.Teklif = teklifBool;
  kartEkle.UserEntityId = parseInt(user_id);
  kartEkle.GirisTarihi = new Date(kartEkle.GirisTarihi).toISOString();
  await fetch('http://localhost:5184/api/CardEntities', {
      method: 'POST',
      headers: {
          'Content-Type': 'application/json'
      },
      body: JSON.stringify(kartEkle)
  })
  .then(response => {
      if (!response.ok) {
          throw new Error('Network response was not ok');
      }
      return response.json();
  })
  .then(data => {  
      console.log('Kart ekleme başarılı:', data);
      
      setTimeout(() => {
              test2(data.id);
          }, 220); // Örnek olarak 1 saniye bekletme

  })
  .catch(error => {
      console.error('Kart ekleme hatası:', error);
      return
  });

}


function submitForm() {
    var checkboxler = document.querySelectorAll('input[type="checkbox"]');
    checkboxler.forEach(function(checkbox) {
        if (checkbox.checked) {
            var kartId = checkbox.getAttribute('data-id');
            console.log(kartId);
            deleteCardFetch(kartId);
        }
    });
    window.location.href = "/MainPage/Index";
}

function toplaKartEkleVerileri() {
    kartEkle = {
        adSoyad:      document.getElementById('AdSoyad').value,
        TelNo:        document.getElementById('TelNo').value,
        MarkaModel:   document.getElementById('MarkaModel').value,
        GirisTarihi:  document.getElementById('GirisTarihi').value,
        Plaka:        document.getElementById('Plaka').value,
        Km:           document.getElementById('Km').value,
        Sasi:         document.getElementById('Sasi').value,
        ModelYili:    document.getElementById('ModelYili').value,
        Renk:         document.getElementById('Renk').value,
        adres:        document.getElementById('adres').value,
        notlar:       document.getElementById('notlar').value,
        Teklif:       false,
        UserEntityId: parseInt(user_id)
    };
    console.log(kartEkle);
}

function ekleKartEkleAsama2Listeye() {
    let birimAdedi = parseInt(document.getElementById('birimAdedi').value);
    let parcaAdi = document.getElementById('parcaAdi').value;
    let birimFiyati = parseFloat(document.getElementById('birimFiyati').value);
    let totalFiyat = birimAdedi * birimFiyati;

    document.getElementById('birimAdedi').value = '';
    document.getElementById('parcaAdi').value = '';
    document.getElementById('birimFiyati').value = '';
    kartEkleAsama2 = {
        birimAdedi: birimAdedi,
        parcaAdi: parcaAdi,
        birimFiyati: birimFiyati,
        totalFiyat: totalFiyat
    };
    console.log(kartEkleAsama2);
    KartEkleAsama2List.push(kartEkleAsama2);
    tabloyuGuncelleAsama2();

}

function ekleSilinecekKartList(id) {
    silineceklerKartList.push(id);
}

function gonderKartEkleVerileri() {
    KartEkleBackGönder = {
        silinecekKartlar: silineceklerKartList,
        kartEkle: kartEkle,
        kartEkleAsama2List: KartEkleAsama2List
    };

    // AJAX ile KartEkleBackGönder'i sunucuya gönderme
    $.ajax({
        type: "POST",
        url: '/YourController/YourAction',
        contentType: 'application/json',
        data: JSON.stringify(KartEkleBackGönder),
        success: function(response) {
            console.log("Başarılı: ", response);
        },
        error: function(error) {
            console.log("Hata: ", error);
        }
    });
}

function SilAsama2(one,two,three)
{
  KartEkleAsama2List = KartEkleAsama2List.filter(function(item) {
    return item.birimAdedi !== one && item.birimFiyati !== three && item.parcaAdi !== two;
  });
  tabloyuGuncelleAsama2();
}

function tabloyuGuncelleAsama2() {
      console.log("1111");
    var tabloGovdesi = document.getElementById('KartEkleAsama2Gövdesi');
    tabloGovdesi.innerHTML = ''; // Mevcut içeriği temizle

    KartEkleAsama2List.forEach(function(kart) {
      console.log("1111");
        var satir = `<tr>
            <td class="px-6 py-4 whitespace-nowrap">${kart.birimAdedi}</td>
            <td class="px-6 py-4 whitespace-nowrap">${kart.parcaAdi}</td>
            <td class="px-6 py-4 whitespace-nowrap">${kart.birimFiyati}</td>
            <td class="px-6 py-4 whitespace-nowrap">${kart.totalFiyat}</td>
            <td class="px-6 py-4 whitespace-nowrap text-center text-sm font-medium">
                <button type="button" onClick={SilAsama2(${kart.birimAdedi},${kart.parcaAdi},${kart.birimFiyati})} class="text-red-500 hover:text-red-700">
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
                </button>
            </td>
        </tr>`;
        tabloGovdesi.innerHTML += satir;
    });
}

function tabloSilAsama2()
{
  KartEkleAsama2List = [];
  tabloyuGuncelleAsama2();
}

// bug

</script>
