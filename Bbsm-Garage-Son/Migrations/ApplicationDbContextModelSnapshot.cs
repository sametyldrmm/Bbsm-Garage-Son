// <auto-generated />
using System;
using Bbsm_Garage_Son.Entitiy;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bbsm_Garage_Son.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.CardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdSoyad")
                        .HasColumnType("text");

                    b.Property<string>("Adres")
                        .HasColumnType("text");

                    b.Property<DateTime?>("GirisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Km")
                        .HasColumnType("integer");

                    b.Property<string>("MarkaModel")
                        .HasColumnType("text");

                    b.Property<string>("ModelYili")
                        .HasColumnType("text");

                    b.Property<string>("Notlar")
                        .HasColumnType("text");

                    b.Property<string>("Plaka")
                        .HasColumnType("text");

                    b.Property<string>("Renk")
                        .HasColumnType("text");

                    b.Property<string>("Sasi")
                        .HasColumnType("text");

                    b.Property<bool>("Teklif")
                        .HasColumnType("boolean");

                    b.Property<string>("TelNo")
                        .HasColumnType("text");

                    b.Property<int>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("CardEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.CardTwoStageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardEntityId")
                        .HasColumnType("integer");

                    b.Property<int?>("birimAdedi")
                        .HasColumnType("integer");

                    b.Property<int?>("birimFiyati")
                        .HasColumnType("integer");

                    b.Property<string>("parcaAdi")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CardEntityId");

                    b.ToTable("CardTwoStageEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.StokEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .HasColumnType("text");

                    b.Property<int?>("Adet")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StokAdi")
                        .HasColumnType("text");

                    b.Property<int>("UserEntityId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserEntityId");

                    b.ToTable("StokEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.CardEntity", b =>
                {
                    b.HasOne("Bbsm_Garage_Son.Entity.UserEntity", "UserEntity")
                        .WithMany("CardEntities")
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.CardTwoStageEntity", b =>
                {
                    b.HasOne("Bbsm_Garage_Son.Entity.CardEntity", "CardEntity")
                        .WithMany("TwoStageEntities")
                        .HasForeignKey("CardEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.StokEntity", b =>
                {
                    b.HasOne("Bbsm_Garage_Son.Entity.UserEntity", "UserEntity")
                        .WithMany("Stoks")
                        .HasForeignKey("UserEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserEntity");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.CardEntity", b =>
                {
                    b.Navigation("TwoStageEntities");
                });

            modelBuilder.Entity("Bbsm_Garage_Son.Entity.UserEntity", b =>
                {
                    b.Navigation("CardEntities");

                    b.Navigation("Stoks");
                });
#pragma warning restore 612, 618
        }
    }
}
